{"version":3,"file":"static/js/503.14400ba3.chunk.js","mappings":"uQAcA,MAXA,YAAoC,IAAbA,EAAY,EAAZA,KAAMC,EAAM,EAANA,GACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACE,SAAC,KAAD,CAAMC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMJ,GAAlC,SACGF,KAIR,ECMD,MAhBA,YAA4C,IAArBO,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAC/B,OACE,wBACGD,EAASE,KAAI,SAACC,EAASC,GACtB,OACE,SAAC,EAAD,CAEEX,KAAMU,EAAQV,KACdC,GAAIU,EAAQH,EAAS,GAFhBG,EAKV,KAGN,ECVKC,EAAoB,GA6E1B,MA3EA,WACE,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAON,EAAP,KAAiBO,EAAjB,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACA,GAA4CH,EAAAA,EAAAA,WAAS,GAArD,eAAOI,EAAP,KAAuBC,EAAvB,KACA,GAAoDL,EAAAA,EAAAA,WAAS,GAA7D,eAAOM,EAAP,KAA2BC,EAA3B,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAqBF,EAAaG,IAAI,WACxCH,EAAaG,IAAI,WACjB,IACJC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEUlB,EAASO,EAAOH,EAAoBA,EAF9C,SAG2Be,EAAAA,EAAmBnB,EAAQI,GAHtD,OAGUgB,EAHV,OAIId,EAAYc,EAASC,SACLT,EAAH,IAATL,GAEAa,EAASE,OAASf,EAAO,GAAKH,EAAoBA,EACpDM,GAAkB,GACfA,GAAkB,GAT3B,kDAWIa,QAAQC,IAAR,MAXJ,2DADc,uBAAC,WAAD,wBAedC,EACD,GAAE,CAAClB,IAEJ,IAQMmB,EAAa,mCAAG,WAAMC,GAAN,uEACdD,EAAgBC,EAAEC,cAAcC,MAAMC,cAC5Cf,EAAgBW,EAAgB,CAAExB,QAASwB,GAAkB,CAAC,GAF1C,2CAAH,sDAWnB,OACE,4BACE,yCAEA,kBAAOK,SAAUL,EAAeG,MAAOb,KACvC,SAAC,EAAD,CACEjB,SAXGA,EAASiC,QAAO,SAAA9B,GAAO,OAC5BA,EAAQV,KAAKsC,cAAcG,SAASjB,EADR,IAY1BhB,OAAQO,EAAOH,EAAoBA,KAErC,mBACEZ,KAAK,WACL0C,KAAK,SACLC,QA/BsB,WAC1B3B,GAAQ,SAAA4B,GAAC,OAAIA,EAAI,CAAR,GACV,EA8BKC,SAAU1B,EAJZ,uBAQA,mBACEnB,KAAK,OACL0C,KAAK,SACLC,QAnCkB,WACtB3B,GAAQ,SAAA4B,GAAC,OAAIA,EAAI,CAAR,GACV,EAkCKC,SAAU5B,EAJZ,oBAUL,C,qHC/ED6B,EAAAA,EAAAA,SAAAA,QAAyB,qCAElB,IAAMC,EAAc,mCAAG,WAAOvC,EAAQwC,GAAf,uFACLF,EAAAA,EAAAA,IAAA,kBAAqBtC,EAArB,kBAAqCwC,IADhC,cACtBC,EADsB,yBAErBA,EAASC,MAFY,2CAAH,wDAKdC,EAAU,mCAAG,WAAMlD,GAAN,uFACD6C,EAAAA,EAAAA,IAAA,UAAa7C,IADZ,cAClBgD,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qD","sources":["components/PokemonList/PokemonItem/PokemonItem.jsx","components/PokemonList/PokemonList.jsx","pages/Pokemon/Pokemon.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nfunction PokemonItem({ name, id }) {\n  const location = useLocation();\n  return (\n    <p>\n      <Link to={`${id}`} state={{ from: location }}>\n        {name}\n      </Link>\n    </p>\n  );\n}\n\nexport default PokemonItem;\n","import PokemonItem from './PokemonItem';\n\nfunction PokemonList({ pokemons, offset }) {\n  return (\n    <ul>\n      {pokemons.map((pokemon, index) => {\n        return (\n          <PokemonItem\n            key={index}\n            name={pokemon.name}\n            id={index + offset + 1}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default PokemonList;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../../services/api';\n\nimport PokemonList from 'components/PokemonList';\n\nconst POKEMONS_PER_PAGE = 50;\n\nfunction Pokemons() {\n  const [pokemons, setPokemons] = useState([]);\n  const [page, setPage] = useState(1);\n  const [disableNextBtn, setDisableNextBtn] = useState(false);\n  const [disablePreviousBtn, setDisablePreviousBtn] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const pokemonSearchQuery = searchParams.get('pokemon')\n    ? searchParams.get('pokemon')\n    : '';\n  useEffect(() => {\n    async function getPokemons() {\n      try {\n        const offset = page * POKEMONS_PER_PAGE - POKEMONS_PER_PAGE;\n        const responce = await API.getPokemonList(offset, POKEMONS_PER_PAGE);\n        setPokemons(responce.results);\n        if (page === 1) setDisablePreviousBtn(true);\n        else setDisablePreviousBtn(false);\n        if (responce.count - (page - 1) * POKEMONS_PER_PAGE < POKEMONS_PER_PAGE)\n          setDisableNextBtn(true);\n        else setDisableNextBtn(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getPokemons();\n  }, [page]);\n\n  const handleClickPrevious = () => {\n    setPage(s => s - 1);\n  };\n\n  const handleClickNext = () => {\n    setPage(s => s + 1);\n  };\n\n  const pokemonSearch = async e => {\n    const pokemonSearch = e.currentTarget.value.toLowerCase();\n    setSearchParams(pokemonSearch ? { pokemon: pokemonSearch } : {});\n  };\n\n  const pokemonFilter = () => {\n    return pokemons.filter(pokemon =>\n      pokemon.name.toLowerCase().includes(pokemonSearchQuery)\n    );\n  };\n\n  return (\n    <div>\n      <span>Pokemon: </span>\n\n      <input onChange={pokemonSearch} value={pokemonSearchQuery}></input>\n      <PokemonList\n        pokemons={pokemonFilter()}\n        offset={page * POKEMONS_PER_PAGE - POKEMONS_PER_PAGE}\n      />\n      <button\n        name=\"previous\"\n        type=\"button\"\n        onClick={handleClickPrevious}\n        disabled={disablePreviousBtn}\n      >\n        Previous\n      </button>\n      <button\n        name=\"next\"\n        type=\"button\"\n        onClick={handleClickNext}\n        disabled={disableNextBtn}\n      >\n        Next\n      </button>\n    </div>\n  );\n}\n\nexport default Pokemons;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pokeapi.co/api/v2/pokemon/';\n\nexport const getPokemonList = async (offset, limit) => {\n  const response = await axios.get(`?offset=${offset}&limit=${limit}`);\n  return response.data;\n};\n\nexport const getDetails = async id => {\n  const response = await axios.get(`${id}`);\n  return response.data;\n};\n"],"names":["name","id","location","useLocation","to","state","from","pokemons","offset","map","pokemon","index","POKEMONS_PER_PAGE","useState","setPokemons","page","setPage","disableNextBtn","setDisableNextBtn","disablePreviousBtn","setDisablePreviousBtn","useSearchParams","searchParams","setSearchParams","pokemonSearchQuery","get","useEffect","API","responce","results","count","console","log","getPokemons","pokemonSearch","e","currentTarget","value","toLowerCase","onChange","filter","includes","type","onClick","s","disabled","axios","getPokemonList","limit","response","data","getDetails"],"sourceRoot":""}